/*********************************************************\
 * Copyright (c) 2012-2021 The Unrimp Team
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software
 * and associated documentation files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
 * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
\*********************************************************/


//[-------------------------------------------------------]
//[ Definitions                                           ]
//[-------------------------------------------------------]
@includepiece(../Shared/SP_Core.asset)
	@insertpiece(SetCrossPlatformSettings)


//[-------------------------------------------------------]
//[ Input / output                                        ]
//[-------------------------------------------------------]
// Attribute input / output
INPUT_BEGIN
										 INPUT_TEXTURE_COORDINATE(1, float3, ColorGS,				  0)	// sRGB vertex color
	NOPERSPECTIVE_INTERPOLATION_MODIFIER INPUT_TEXTURE_COORDINATE(2, float2, LineWidthEdgeDistanceGS, 1)	// x = line width, y = edge distance
INPUT_END
OUTPUT_BEGIN
	OUTPUT_COLOR(0)	// sRGB output color
OUTPUT_END


//[-------------------------------------------------------]
//[ Functions                                             ]
//[-------------------------------------------------------]
@includepiece(../Shared/SP_Color.asset)
	@insertpiece(DefineGammaSpaceToLinearSpace3)


//[-------------------------------------------------------]
//[ Main                                                  ]
//[-------------------------------------------------------]
MAIN_BEGIN
	// Smooth anti-aliased line
	// -> Basing on "Im3d" ( https://github.com/john-chapman/im3d ) DirectX11 example: "https://github.com/john-chapman/im3d/blob/master/examples/DirectX11/im3d.hlsl"
	const float ANTIALIASING = 2.0f;
	float d = abs(MAIN_INPUT(LineWidthEdgeDistanceGS).y) / MAIN_INPUT(LineWidthEdgeDistanceGS).x;
	d = smoothstep(1.0, 1.0 - (ANTIALIASING / MAIN_INPUT(LineWidthEdgeDistanceGS).x), d);

	// Done
	MAIN_OUTPUT_COLOR(0) = float4(GammaSpaceToLinearSpace3(MAIN_INPUT(ColorGS)), d);
MAIN_END
